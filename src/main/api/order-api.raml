#%RAML 0.8
title: fl3x Order API
version: 1
mediaType:  application/json
baseUri: https://fl3x.io/order/api/{apiversion}
baseUriParameters:
  apiversion:
    displayName: version
    type: string
    enum: [ "1" ]
securitySchemes:
  - basic_auth:
      description: HTTP Basic Authentication as defined in RFC 2617.
      type: Basic Authentication
schemas: 
  - !include common-schemas-json.yaml
  - !include common-schemas-xml.yaml
securedBy: [basic_auth]
documentation:
  - title: FL3X
    content: |
      This is the **fl3x order api**
resourceTypes: !include header-resourcetypes.yaml
traits: !include common-traits.yaml
/orders:
  description: Retrive a collection of orders
  type: fl3x-types
  get:
    description: Retrieve list of order summaries.
           
      **Note** If no parameters are specified , retrieves list of order summaries for the last 7 day
    headers:
      Accept:
    is: [with-common-params, with-common-error-responses-json, with-common-error-responses-xml]
    queryParameters:
      fromDate:
          description: Filter orders by only selecting those with a date (creation) greater than the given ISO 8601 timestamp.
            **Note** that if this parameter is not specified, it will default to two weeks previous to the current date.
          type: string
          example: "2015-03-01"
          required: false
      toDate:
          description: Filter orders by only selecting those with a date less than the given ISO 8601 timestamp.
             **Note** the default is taken as the current date 
          type: string
          example: "2015-03-02"
          required: false
      seller:
          description: Filter orders by based on seller
          type: string
          example: "Y5P"
          required: false
      status:
          description: Filter orders by based on status of the order
          type: string
          example: "despatched"
          required: false
      format:
          description: specify the format the data is required in example {application/xml}
            **Note** this is just an alternative to specifying Accept headers - if format and Accept are not specified then
            it would default to application/json. If Accept is specified then Accept header supersedes the format specification.
          type: string
          example: application/xml
          enum: [ "application/xml", "application/json", "text/csv" ]
          required: false
    responses:
      200:
        body:
          application/json:
  post:
      description: This method will be used to bulk upload order information into the order hub.
        **Note** Always use the PUT method for a single order since the PUT method is idempotent 
      is: [with-common-params, with-common-error-responses-json, with-common-error-responses-xml, with-nocontent-location-xml, with-nocontent-location-json]
      headers:
        x-callback-url:
      body:
        application/json:
      responses:
        200:
          body:
            application/json:
  /{orderId}:
    uriParameters:
      orderId:
        type: string
        example: 209-1232-00912
    type: fl3x-types
    get:
      description: Retrieve an order.
      is: [with-common-params, with-common-error-responses-json, with-common-error-responses-xml]
      queryParameters:
        format:
          description: specify the format the data is required in example {application/xml}
            **Note** this is just an alternative to specifying Accept headers - if format and Accept are not specified then
            it would default to application/json. If Accept is specified then Accept header supersedes the format specification.
          type: string
          example: application/xml
          enum: [ "application/xml", "application/json", "text/csv" ]
          required: false
      responses:
        200:
          body:
            text/plain:
    put:
      description: Create an Order in the Order Hub.
        **Note** The response will be in the format of the request content-type
      is: [with-common-params, with-common-error-responses-json, with-common-error-responses-xml, with-common-put-response-json, with-common-put-response-xml]
      body:
        application/json:
    /status:
      type: fl3x-types
      get:
        description: Retrieve an order.
        is: [with-common-params, with-common-error-responses-json, with-common-error-responses-xml]
        headers:
          Accept:
        queryParameters:
          format:
            description: specify the format the data is required in example {application/xml}
              **Note** this is just an alternative to specifying Accept headers - if format and Accept are not specified then
              it would default to application/json. If Accept is specified then Accept header supersedes the format specification.
            type: string
            example: application/xml
            enum: [ "application/xml", "application/json", "text/csv" ]
            required: false
        responses:
          200:
            body:
              application/json:
      patch:
        description: Update the order with a new state
        body:
          application/json:
  /customers/{customerId}:
    uriParameters:
      customerId:
        type: string
        example: 1888981212
    type: fl3x-types
    get:
      description: Retrieve Order History for the customer
      is: [with-common-params, with-common-error-responses-json, with-common-error-responses-xml]
      headers:
        Accept:
      queryParameters:
        fromDate:
          description: Filter orders by only selecting those with a date (creation) greater than the given ISO 8601 timestamp.
            **Note** that if this parameter is not specified, it will default to the first day of six months prior to the current month.
          type: string
          example: "2015-03-01"
          required: false
        toDate:
          description: Filter orders by only selecting those with a date less than the given ISO 8601 timestamp.
             **Note** the default is taken as the current date 
          type: string
          example: "2015-03-02T00:00:00Z"
          required: false
        seller:
          description: Filter orders by based on seller
          type: string
          example: "Y5P"
          required: false
        status:
          description: Filter orders by based on status of the order
          type: string
          example: "despatched"
          required: false
        format:
          description: specify the format the data is required in example {application/xml}
            **Note** this is just an alternative to specifying Accept headers - if format and Accept are not specified then
            it would default to application/json. If Accept is specified then Accept header supersedes the format specification.
          type: string
          example: application/xml
          enum: [ "application/xml", "application/json", "text/csv" ]
          required: false
      responses:
        200:
          body:
            application/json:
    
    